{
  "alerts": {
    "afterSave": "Die Änderungen in diesem Bereich werden nach einem Neustart aktiv.",
    "afterSaveOrManualStart": "Die Änderungen am Zeitplan werden nach einem Neustart aktiv oder nachdem der Messmodus mit dem Taster gestoppt und wieder gestartet wird. Ob der WittyPi im energiesparsamen Zeitplan läuft wird nämlich in der Messroutine entschieden, wenn auch die Batteriespannung (Volt) gemessen wurde.",
    "changedSettings": "Du hast ungespeicherte Änderungen vorgenommen.",
    "deviceId": "<strong>Hinweis:</strong> Es wurde ein Sensor mit einer ungültigen Device-ID festgestellt.\nDies tritt unter anderem beim DS18B20 dann auf, wenn ein Widerstand vergessen wurde oder ein falscher Widerstand verwendet wurde.\nEine weitere Ursache könnte ein angeschlossener DHT-Sensor sein. <strong>In diesem Fall kann dieser Hinweis ignoriert werden.</strong>",
    "dummyload": "Dummyload ist eine Funktion des WittyPis, um eine Powerbank aktiv zu halten. Gewisse Powerbank Modelle neigen dazu abzuschalten, wenn über längere Zeit kein Strom gebraucht wird. Um Batterie zu sparen sollte der Dummyload deaktiviert bleiben solange keine Powerbank verwendet wird.",
    "errorSaving": "<strong>Fehler!</strong> Die Einstellungen konnten nicht gespeichert werden.",
    "gpio": "<b>GPIO:</b> Die Kontaktstifte auf dem Raspberry Pi Board haben zwei Nummerierungen. Eine physische von 1 bis 40 und eine für jeden frei programmierbaren GPIO. Bei der Angabe des Kontaktstiftes wird hier im Wartungsmodus immer die GPIO Nummerierung angegeben.",
    "hx711": {
      "offset": "<b>Offset:</b> Beeinflusst das Messergebnis indem das Offset vom Messwert abgezogen wird.\n<br />Kann auch eine negative Zahl sein. <b>Angabe in Gramm.</b> Standard ist \"0\".",
      "scale": "<b>Skalierungswert:</b> Beeinflusst das Messergebnis indem (Messwert-Offset) durch den Skalierungswert geteilt wird.\n<br />Es sind vier Nachkommastellen erlaubt und die <b>Nachkommastellen werden mit Punkt</b> und nicht mit Komma getrennt. Standard ist \"1\"."
    },
    "noTempSensorFound": "Es konnte kein Temperatursensor am Gerät gefunden werden.",
    "notAP": "<strong>Hinweis:</strong> Der Wartungsmodus wird nicht über den \"HoneyPi\"-AccessPoint aufgerufen. Das Drücken des Hardware-Tasters bleibt daher aus. Änderungen der Einstellungen können aber durch ein Klicken auf den folgenden Button angewandt werden:",
    "saved": "<strong>Gespeichert!</strong> Die Einstellungen wurden gespeichert.",
    "shutdownAfterTransfer": "Um in den Wartungsmodus zu kommen muss direktet nach dem Blinken der LED beim Start der Taster gedrückt werden.",
    "tomanysensorsofthattype": "Einige Sensoren, darunter BH1750, PA1010D und EE895 können nur einmal per I2C-Bus an den Raspberry Pi angeschlossen werden. Die Sensoren BME280 und BME680 können aufgrund der begrenzten Anzahl von I2C-Adresen höchstens zwei mal angeschlossen werden. Lösche die doppelten Einträge dieser Sensoren.",
    "updateAP": "<b>Hinweis:</b> Der Wartungsmodus wird von Dir über den \"HoneyPi\"-AccessPoint aufgerufen. Du kannst im Reiter \"Internetverbindung\" ein WLAN-Netzwerk deiner Wahl eintragen. Je nach Raspberry Modell kann auch ein LAN Kabel angeschlossen werden.",
    "updateInfo": "1. Das Datenvolumen des Surfsticks kann dabei verbraucht werden. <br>\n2. Es empfiehlt sich daher, den Raspberry Pi für das Systemupdate vom Surfstick zu trennen und ihn mit einem vorhandenen WLAN-Netzwerk zu verbinden.",
    "updateNotAP": "<b> Gut so! </b> Du rufst den Raspberry nicht über den \"HoneyPi\"-AccessPoint auf, sondern über die IP-Adresse im Heimnetzwerk.",
    "wittypi": "Mit Hilfe des zusätzlichen Witty Pi Moduls kann der Raspberry Pi zeitgesteuert werden.\nWir bieten bereits drei nützliche Zeitpläne. Diese können im Eingabefeld verändert werden. Voraussetzung ist das optionale <strong>WittyPi</strong>-Modul. \nBeim Speichern sollte eine \"Internetverbindung\" (bspw. über einen Surfstick oder WiFi) bestehen, damit die aktuelle Systemzeit aktualisiert werden kann."
  },
  "brand": "HoneyPi",
  "buttons": {
    "add": "Hinzufügen",
    "reboot": "Neustarten",
    "refresh": "aktualisiere",
    "remove": "Entfernen",
    "restart": "HoneyPi-Service neustarten",
    "save": "Speichern",
    "select": "Bitte {{value}} auswählen...",
    "shutdown": "Ausschalten",
    "start": "Starten",
    "stop": "Stoppen",
    "tryagain": "Erneut versuchen",
    "undo": "Änderungen verwerfen"
  },
  "error": {
    "length": "\"{{field}}\" liegt außerhalb des gültigen Wertebereichs.",
    "required": "Das Feld \"{{field}}\" wird benötigt.",
    "spaces": "\"{{field}}\" enthält ein Leerzeichen. Ist das gewollt?",
    "specialchar": "\"{{field}}\" enthält nichterlaubte Sonderzeichen.",
    "wittypiinstructions": "Ein Zeitplan auf dem WittyPi Modul wurde aktiviert, setze das Messintervall auf \"einmalige Übertragung nach dem Anschalten\" und aktiviere \"Herunterfahren nach erfolgreicher Übertragung\".",
    "wittypinotwait": "Der Raspberry wird nach erfolgreicher Messübertragung heruntergefahren. Daher sollte dein Zeitplan angepasst werden. Am Ende jeder \"ON\" Zeile sollte ein \"WAIT\" stehen. Durch ein fehlendes \"WAIT\" hinter dem z.B. \"ON M5\" würde das WittyPi-Modul den Raspberry zum Herunterfahren nochmal hochfahren.",
    "wittypiwait": "Aktiviere \"Herunterfahren nach erfolgreicher Übertragung\", durch das vorhandene \"WAIT\" in der \"ON\" Zeile wird der Raspberry nicht durch das WittyPi-Modul heruntergefahren.",
    "wittypiyeartobig": "Die Dauer deines WittyPi Zeitplans ist zu lang. Ändere das Jahr auf höchstens 2037."
  },
  "settings": {
    "confirm": {
      "installWittyPi": "HINWEIS: Diese Installation ist nicht mehr notwendig und der WittyPi sollte auch ohne Installation funktionieren. \n\nDu bist dabei auf deinem HoneyPi die Software für das WittyPi Modul zu installieren. Dazu muss zwingend eine Internetverbindung (bspw. über WLAN) bestehen. Teste das bitte zuvor im Reiter \"Internetverbindung testen\". Vergiss auch nicht deine aktuellen Einstellungen vorher zu Speichern.",
      "reboot": "Alle ungespeicherten Änderungen gehen verloren. Die Verbindung wird sich vorübergehend trennen. \nDas Gerät wird nun neugestartet.  \nSicher?",
      "restart": "Falls der Wartungsmodus aktiv sein sollte, wird dieser beendet und die regulären Messungen beginnen. Bei einem aktivierten WittyPi-Zeitplan fährt der Raspberry evtl. nach erfolgreicher Messdatenübertragung herunter.  \nFortfahren?",
      "savedAP": "Damit alle Änderungen wirksam werden ist meist ein Neustart erforderlich. \nSoll das Gerät nun neugestartet werden?",
      "shutdown": "Alle ungespeicherten Änderungen gehen verloren. Das Gerät fährt herunter. \nSicher?",
      "start": "Falls der Wartungsmodus aktiv sein sollte, wird dieser beendet und die regulären Messungen beginnen. Bei einem aktivierten WittyPi-Zeitplan fährt der Raspberry evtl. nach erfolgreicher Messdatenübertragung herunter.  \nFortfahren?",
      "stop": "Der HoneyPi service wird gestoppt. Er schaltet sich nicht selbst wieder an, vergess also nicht den Service wieder zu starten!  \nFortfahren?"
    },
    "connectionerror": {
      "body": "<p>Die Bienenstockwaage ist gerade nicht erreichbar, vermutlich wurde das System neu gestartet, dies kann bis zu 1 Minute dauern.\n</p>",
      "stayconnectedAP": "Stelle bitte sicher, dass du immernoch mit dem \"HoneyPi\"-WLAN verbunden bist. Die Verbindung könnte sich in der Zwischenzeit automatisch getrennt haben. Da der \"HoneyPi\"-AccessPoint keine Internetverbindung liefert, neigen Geräte dazu, trotz verbundenen Wlan, dann den Mobilfunk fürs Internet zu nutzen. Um sich dennoch mit dem HoneyPi-Webinterface zu verbinden kann helfen: Aktiviere den Flugmodus und anschließend aktiviere nur das Wlan. Verbinde dich erneut mit dem \"HoneyPi\"-AccessPoint.",
      "stayconnectedNotAP": "Offenbar scheinst du den HoneyPi nicht über den AccessPoint aufzurufen. Ein weiterer Grund könnte daher sein, dass sich die IP-Adresse des Geräts in deinem Heimnetzwerk geändert hat. Um weitere Fehler auszuschließen hilft es, den Browser Cache zu leeren oder es mit einen anderen Browser zu probieren.",
      "title": "Verbindung fehlgeschlagen"
    },
    "internet": {
      "apn": "APN",
      "collapseAP": "Erweiterte Einstellungen für Nutzer, die wissen was sie tun »",
      "connect": "Wähle die Art deines Surfsticks aus. Auftretende Verbindungsprobleme können dadurch korrekt im Protokoll vermerkt werden.",
      "connectHiLink": "Surfstick im HiLink Modus verbinden (meist verwendet)",
      "connectModem": "Modem mit wvdial verwenden",
      "connectNothing": "Es ist kein Surfstick angeschlossen",
      "connectSelect": "Wähle die Art deines Surfsticks aus...",
      "connectWifi": "Mit vorhandenem WLAN-Netzwerk verbinden, wenn in Reichweite?",
      "defaultGW": "Default Gateway (Surfstick-Konfigurationsseite) öffnen.",
      "honeypiAP": "HoneyPi Wartungsmodus",
      "honeypiAPtext": "Ändere die SSID und das Passwort des AccessPoints.",
      "honeypiModem": "Surfstick",
      "infoConnection": "Während des Wartungsmodus kann sich <strong>nicht gleichzeitig</strong> mit einem WLAN-Netzwerk verbunden werden, da der WLAN Chip ja bereits den AccessPoint bereitstellt.\nDaher kann nur die Internetverbindung eines angeschlossenen Surfsticks oder des LAN-Anschluss getestet werden.",
      "isMobileConnected": "Internetverbindung vorhanden?",
      "isSurfstickConnected": "Netzwerke verbunden?",
      "password": "WLAN-Netzwerkschlüssel",
      "ssid": "WLAN-Funknetz (SSID)",
      "testConnection": "Teste Internetverbindung",
      "testDiag": "Hole Diagnosedaten",
      "testError": "<strong>Fehler!</strong> Verbindung ins Internet fehlgeschlagen.",
      "testSuccess": "<strong>HoneyPi ist verbunden!</strong> Der Internet Test war erfolgreich.",
      "title": "Internetverbindung",
      "ttyUSB": "ttyUSB Eingang",
      "wifi": "WLAN Internetzugang",
      "wpa_type": "WPA-Verschlüsselung"
    },
    "log": {
      "copy": "In Zwischenablage kopieren",
      "delete": "Löschen",
      "empty": "Das Protokoll auf diesem Gerät ist leer.",
      "export": "Einstellungen exportieren",
      "get": "Aktualisieren",
      "import": "Importieren",
      "importSettings": "Einstellungsdatei importieren:",
      "nofile": "Auf diesem Gerät befindet sich kein Protokoll.",
      "title": "Protokoll"
    },
    "measurement": {
      "construction": "Diese Ansicht ist bisher nur provisorisch und soll in der nächsten Firmware Version ausgebaut werden.",
      "get": "Neue Messung abrufen",
      "info": "Hier werden die Sensoren angezeigt, die im Reiter \"<strong>{{tab}}</strong>\" konfiguriert und gespeichert sind. Die Messung ist lokal, es erfolgt kein Upload.",
      "noData": "Keine Messdaten gemessen. Wurden die Sensoren im Reiter \"<strong>{{tab}}</strong>\" konfiguriert?",
      "title": "Messdaten"
    },
    "miscellaneous": {
      "display_enabled": "OLED aktivieren (Modell: OLED 128x64px mit SSD1306 Chip)",
      "enable_reset": "Aktiviere die Option, dass wenn der Taster 10 Sekunden gedrückt wird, alle HoneyPi Einstellungen zurückgesetzt werden",
      "show_nondefault_password": "Zeige ein geändertes WLAN Passwort des \"HoneyPI\"-AccessPoints",
      "timeToStopMaintenance": "Der Wartungsmodus des HoneyPi Access-Points schaltet sich automatisch ab, um versehentliche Aktivierungen oder vergessenes Abschalten des Wartungsmodus zu korrigieren und den normalen Messbetrieb fortzusetzen.",
      "title": "Weitere Einstellungen"
    },
    "offline": {
      "delete": "Löschen",
      "export": "Offline Messdaten verwalten",
      "exportButton": "Herunterladen",
      "infoExport": "Die Messdaten werden in einer CSV-Datei abgespeichert. Diese Datei kann anschließend in den ThingSpeak Channel importiert werden. Ansonsten können die Messdaten auch mit der iOS-/Web-App visualisiert werden.",
      "noData": "Gebe im Reiter \"<strong>{{tab}}</strong>\" mindestens einen Channel an.",
      "offline": "Messdaten offline speichern ohne ThingSpeak",
      "radio0": "Online: Ausschließlich Online an ThingSpeak übertragen",
      "radio1": "Beides: Zu ThingSpeak übertragen und in CSV-Datei ablegen",
      "radio2": "Bei Fehlern: Nur bei Internet-Verbindungsfehlern in CSV-Datei schreiben",
      "radio3": "Offline: Ausschließlich Offline in CSV-Datei schreiben",
      "title": "Offline Messdaten",
      "upload": "Datenupload zu ThingSpeak"
    },
    "sensors": {
      "addSensor": "Sensor hinzufügen",
      "advancedSettings": "Erweiterte Einstellungen »",
      "buttonPin": "Wartungsmodus-Taster GPIO",
      "calibration": {
        "btnBack": "Zurück",
        "btnFinish": "Kalibrierungswerte übernehmen",
        "btnNext": "Weiter",
        "guidedTour": "Geführte Kalibrierung der Waage",
        "step0": "<p>Beginne die automatische Kalibrierung der Waage.</p>",
        "step1": "<p>\n            Entferne alle Gewichte von der Waage und stelle sicher, dass die Messung nicht durch Berührungen der Waage gestört wird.\n            <br>Danach drücke auf Weiter.\n</p>",
        "step2": "<p>\n            Lege ausschließlich dein Kalibrierungsgewicht auf die Waage.\n            Das Gewicht sollte mindestens 3000g (3kg) betragen.\n            <br>Gebe das Gewicht des verwendeten Kalibrierungsgewichts ein [in Gramm]. Danach drücke auf Weiter.\n</p>",
        "step3": "<p>\nKalibrierung ist abgeschlossen. Vergiss nicht die neuen Einstellungen zu speichern.\n</p>",
        "title": "Waage kalibrieren",
        "weightPlaceholder": "Gewicht [in Gramm]"
      },
      "checkWires": "Prüfe ob die Sensoren richtig angeschlossen sind und",
      "checkWiresSuffix": "die Liste.",
      "co2": "CO2",
      "compensationSelectTemp": "Auswahl des Temperatursensors",
      "compensationTemp": "Temperatur bei Kalibrierung",
      "compensationTempPlaceholder": "Temperaturwert (z.B. 22°C)",
      "compensationValue": "Korrekturwert [Gramm pro °C]",
      "compensationValuePlaceholder": "Kompensationswert",
      "customValue": "Eigenen Wert eingeben...",
      "debug": "Debug-Modus aktivieren <small>(keine Neustarts, HDMI-Ausgang an, erfolgreiche Übertragungen im Protokoll)</small>",
      "debugSelect": "Debug-Level auswählen",
      "debugSelectLogfile": "Die Art und Menge der Ausgaben ins Logfile auswählen.",
      "debuglevel": "Debuglevel",
      "default_state": "WittyPi default Zustand",
      "dummyload": "Zeitdauer des Dummyloads auswählen (nur nützlich mit einer Powerbank)",
      "dummyloadTimespan": "Zeitdauer des Dummyloads",
      "enableCompensation": "Temperaturkompensation bei temperaturbedingten Messabweichungen",
      "filter_negative": "Filtere negative Messwerte zur Messfehler-Reduzierung",
      "humidity": "Luftfeuchtigkeit",
      "i2c_addr": "I2C-Adresse <br><small>Nur notwendig, wenn mehr als ein baugleicher Sensor angeschlossen wird.</small>",
      "interval": "Intervall",
      "invert": "Vorzeichen umkehren",
      "ledPin": "Externe LED GPIO",
      "light": "Lichtsensor (Lux)",
      "measurementInterval": "Messintervall",
      "measurementNone": "Keine Messdatenübertragung",
      "measurementOnce": "Einmalige Übertragung nach dem Anschalten (empfohlen für das WittyPi-Modul)",
      "offset": "Offset",
      "power_cut_delay": "Verzögerung der Abschaltung [Sekunden]",
      "pressure": "Luftdruck",
      "pulsing_interval": "Intervall für LED blinken [Sekunden]",
      "quality": "Luftgüte",
      "scale": "Skalierungswert",
      "selectI2CVoltage": "Maximalen Messbereich auswählen [V]",
      "selectI2CVoltage_c": "Maximal messbare Spannung [V] (z.B. 16.5V)",
      "selectPin": "PIN des PCF8591 auswählen",
      "selectType": "Auswahl des Sensormodells",
      "sensor": "Sensor",
      "sensor_0": "Temperatursensor (DS18b20)",
      "sensor_1": "Temperatur+Luftfeuchtigkeit+Luftdruck+Qualität (BME680)",
      "sensor_10": "Luftfeuchtigkeit und Temperatur (AHT10/AHT15/AHT20/AHT21)",
      "sensor_11": "Lichtsensor (BH1750)",
      "sensor_12": "Luftfeuchtigkeit und Temperatur (SHT25)",
      "sensor_2": "Gewichtssensor (HX711)",
      "sensor_3": "Luftfeuchtigkeit und Temperatur (DHT11/DHT22/AM2302)",
      "sensor_4": "Temperatursensor (MAX6675/MAX31855)",
      "sensor_5": "Temperatur+Luftfeuchtigkeit+Luftdruck (BME280)",
      "sensor_6": "Voltmeter für die Batterie (PCF8591)",
      "sensor_7": "CO2 + Temperatur + Luftduck (EE895)",
      "sensor_8": "Luftfeuchtigkeit und Temperatur (HDC1080/HDC2080)",
      "sensor_9": "Luftfeuchtigkeit und Temperatur (SHT30/SHT31/SHT35/SHT85)",
      "sensor_99": "GPS (PA1010D)",
      "sensors": "Sensoren",
      "shutdownAfterTransfer": "Nach einmaliger Übertragung Raspberry herunterfahren",
      "temperature": "Temperatur",
      "timeout": "Timeout [Sekunden]",
      "title": "Angeschlossene Sensoren",
      "ts_field_absolutehumidity": "Absolute Luftfeuchte [g/mᵌ]",
      "ts_field_uncompensated": "Unkompensiertes Gewicht",
      "use3V": "Einen GPIO als 3,3V Quelle vewenden",
      "version": "Version",
      "weightcell": "Wägezelle",
      "white_led_duration": "Dauer der LED [ms]"
    },
    "thingspeak": {
      "addChannel": "Weitere Channel hinzufügen",
      "checkConnection": "Verbindung zu ThingSpeak überprüfen",
      "confirmCheck": "Du bist dabei zu testen, ob die eingegebenen ThingSpeak Verbindungsdaten richtig sind.\nHinweis: Diese Funktion geht nur, wenn der Raspberry mit dem Internet verbunden bist. Um die Internetverbindung zu prüfen gibt es unterhalb den Reiter und den Button \"Internetverbindung prüfen\".",
      "field": "Feld",
      "removeChannel": "Channel aus der Liste Entfernen",
      "title": "ThingSpeak Einstellungen"
    },
    "update": {
      "availableVersion": "Vefügbare Versionen:",
      "currentVersion": "Derzeit installierte Version:",
      "export": "Einstellungen",
      "install": "System neu installieren",
      "internet_connection": "Keine Internetverbindung. Versuche es später erneut mit einer Internetverbindung.",
      "need_refresh": "Erfolgreich aktualisiert. Die Seite muss aktualisiert werden.  \nJetzt neuladen?",
      "newVersionAvailable": "Ein aktuelleres Systemupdate ist verfügbar. Du kannst dies im Reiter \"Systemupdate\" aktualisieren. Halte deine HoneyPi Software aktuell, um von Fehlerbehebungen und neuen Features zu profitieren.",
      "preupdate": "Nach neuster Version suchen",
      "title": "Systemupdate",
      "update": "Jetzt aktualisieren",
      "usePreVersion": "Installiere auch Vorab-Versionen (Betatest)",
      "want_import": "Soll die Datei jetzt importiert werden?"
    },
    "wittypi": {
      "empty": "Leeres Feld",
      "enableLowMode": "Aktiviere einen energiesparsamen Zeitplan",
      "enableNormalMode": "Aktiviere einen Zeitplan",
      "enableVoltageCheck": "Wechsel zwischen verschiedenen Zeitplänen bei angeschlossenem Voltmeter (PCF8591)",
      "enableWitty": "Witty Pi Modul aktivieren",
      "install2": "WittyPi 2 installieren",
      "install3": "WittyPi 3 installieren",
      "install4": "WittyPi 4 installieren",
      "loadexample": "Beispiel Zeitplan laden...",
      "need_restart": "Erfolgreich. Der Raspberry muss jetzt von dir neugestartet werden.",
      "script": "Zeitplan für den WittyPi",
      "title": "Zeit- und Energiemanagement",
      "version": "WittyPi Version auswählen",
      "voltage": "Volt",
      "voltageLow": "Grenzwert für die Aktivierung des energiesparenden Zeitplanes",
      "voltageLowInterval": "Messintervall während des energiesparsamen Modus",
      "voltageNormal": "Grenzwert für die Rückkehr zum normalen Zeitplan"
    }
  },
  "title": "Wartungsmodus"
}
