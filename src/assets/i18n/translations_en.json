{
  "alerts": {
    "afterSave": "The changes in this area become active after a restart.",
    "afterSaveOrManualStart": "The changes in this area become active after a restart or after the measurements have been stopped and started again with the button. Whether the WittyPi runs in the energy-saving schedule is decided in the measuring routine, if the battery voltage was measured.",
    "changedSettings": "You have made unsaved changes.",
    "deviceId": "<strong>Note:</strong> A sensor with an invalid device ID was detected.\nThis occurs with the DS18B20, for example, if a resistor is forgotten or an incorrect resistor is used.\nAnother cause could be a connected DHT sensor. <strong>In this case this message can be ignored.</strong>",
    "dummyload": "Dummyload is a function of the WittyPis to keep a Powerbank active. Some Powerbank models tend to switch off when no power is used for a longer period of time. To save battery power the dummyload should remain deactivated as long as no powerbank is used.",
    "errorSaving": "<strong>Error!</strong> The settings could not be saved.",
    "gpio": "<b>GPIO:</b> The contact pins on the Raspberry Pi Board have two numberings. One physical from 1 to 40 and one for each freely programmable GPIO. Here in maintenance mode is always the GPIO numbering beeing used.",
    "hx711": {
      "offset": "<b>Offset:</b> Influences the measuring result by subtracting the offset from the measured value.\n<br />Can also be a negative number. Indication in grams. Default is \"0\".",
      "offset2": "<br />Can also be a negative number. Indication in grams. Default is \"0\". <b>Changed automatically during maintenance mode. Any weight change in maintenance mode is automatoically measured and this value will be updated.</b>",
      "scale": "<b>Scaling value:</b> Influences the measurement result by dividing (measured value-offset) by the scaling value.\n<br /> Four decimal places are allowed and the decimal places are separated by a dot and not by a comma. The default is \"1\"."
    },
    "noTempSensorFound": "No temperature sensor could be found on the device.",
    "notAP": "<strong>Note:</strong> The maintenance mode is not called via the \"HoneyPi\" AccessPoint. Therefore, pressing the hardware button will probably remain off. However, changes can be applied by clicking the following button:",
    "saved": "<strong>Saved!</strong> The settings have been saved.",
    "shutdownAfterTransfer": "To enter the maintenance mode, the button must be pressed immediately after the LED flashes at startup.",
    "tomanysensorsofthattype": "Some sensors, including BH1750, PA1010D and EE895 can only be connected to the Raspberry Pi once via I2C bus. The sensors BME280 and BME680 can be connected at most twice due to the limited number of I2C addresses. Delete the duplicate entries of these sensors.",
    "updateAP": "<b>Note:</b> The maintenance mode is called by you via the \"HoneyPi\"-AccessPoint. You can enter a WLAN network of your choice in the \"Internet connection\" tab. Depending on the Raspberry model a ethernet cable can be connected for internet conmnection.",
    "updateInfo": "1. The data volume of the surf stick can be used up. <br>\n2. It is therefore recommended to disconnect the Raspberry Pi from the Surfstick for the system update and connect it to an existing WiFi network.",
    "updateNotAP": "<b>Success!</b> You call the Raspberry not via the \"HoneyPi\" AccessPoint, but via the IP address in the home network.",
    "wittypi": "With the help of the additional Witty Pi module, the Raspberry Pi can be time-controlled.\nWe already offer three useful schedule programs. These can also be changed in the input field. Prerequisite is the <strong>WittyPi</strong> module. \nWhen saving, there should be an \"Internet connection\" (e.g. via a surfstick or WiFi) so that the current system time can be updated."
  },
  "brand": "HoneyPi (en)",
  "buttons": {
    "add": "Add",
    "reboot": "Reboot",
    "refresh": "refresh",
    "remove": "remove",
    "restart": "Restart HoneyPi service",
    "save": "Save",
    "select": "Please select a {{value}}",
    "shutdown": "Shutdown",
    "start": "Start",
    "stop": "Stop",
    "tryagain": "Try again",
    "undo": "discard changes"
  },
  "error": {
    "length": "\"{{field}}\" is outside the valid value range.",
    "required": "The field \"{{field}}\" is required.",
    "spaces": "\"{{field}}\" contains a space character. Is that wanted?",
    "specialchar": "\"{{field}}\" contains forbidden special characters.",
    "wittypiinstructions": "A schedule on the WittyPi module has been activated, set the measurement interval to \"once after power on\" and activate \"shutdown after successful transfer\".",
    "wittypinotwait": "The Raspberry shutsdown after successful measurement transmission. Therefore your schedule should be adjusted. At the end of each \"ON\" line there should be a \"WAIT\". A missing \"WAIT\" after the e.g. \"ON M5\" would cause the WittyPi module to start up the Raspberry again for shutdown.",
    "wittypiwait": "Enable \"Shutdown after successful transfer\", by the existing \"WAIT\" behind the \"ON\" line the Raspberry will not be shutdown by the WittyPi module.",
    "wittypiyeartobig": "The duration of your WittyPi schedule is too long. Change the year to 2037 at most."
  },
  "settings": {
    "confirm": {
      "installWittyPi": "NOTE: This installation is no longer necessary and the WittyPi should also work without installation. \n\nYou are about to install the software for the WittyPi module on your HoneyPi. For this an internet connection (e.g. via WiFi) must be available. Please test this first in the tab \"Test Internet connection\". Also don't forget to save your current settings first.",
      "reboot": "All unsaved changes are lost. The connection will be temporarily disconnected. \nThe device will now restart.  \nAre you sure?",
      "restart": "If the maintenance mode should be active, it will be terminated and the measurements will start. With an activated WittyPi schedule, the Raspberry may shut down after successful measurement data transfer.  \nContinue?",
      "savedAP": "A restart is required for the most changes to take effect. \nShould the device now be restarted?",
      "shutdown": "All unsaved changes are lost. The device will now shutdown. \nAre you sure?",
      "start": "If the maintenance mode should be active, it will be terminated and the measurements will start. With an activated WittyPi schedule, the Raspberry may shut down after successful measurement data transfer.  \nContinue?",
      "stop": "The HoneyPi service is stopped. It does not restart itself, so do not forget to restart the service!  \nContinue?"
    },
    "connectionerror": {
      "body": "<p>The beehive scale is currently not available, probably the system has been restarted, this can take up to 1 minute.\n</p>",
      "stayconnectedAP": "Another reason could be: Please make sure you are still connected to the HoneyPi WiFi. The connection may have disconnected automatically in the meantime. Since the \"HoneyPi\" access point does not provide an Internet connection, devices tend to use mobile networks for the Internet, even though they have WiFi connected. To be stil able to connect to the HoneyPi web interface it might help: Activate flight mode and then activate only the WiFi. Connect to the \"HoneyPi\" access point again.",
      "stayconnectedNotAP": "Obviously you do not seem to call up the HoneyPi via the access point. Another reason could be that the IP address of the device in your home network has changed. You could also try to clear the browser cache to see if this is causing the issue.",
      "title": "Connection failed"
    },
    "internet": {
      "apn": "APN",
      "collapseAP": "Advanced settings for users who know what they're doing Â»",
      "connect": "Choose the type of your internet modem. Any connection problems that occur can thus be correctly noted in the log.",
      "connectHiLink": "Connect surfstick in HiLink mode (most used)",
      "connectModem": "Connect internet modem with Wvdial",
      "connectNothing": "No surfstick connected",
      "connectSelect": "Choose the type of your internet modem...",
      "connectWifi": "Connect to existing WiFi network when reachable?",
      "defaultGW": "Open Default Gateway (surfstick configuration page).",
      "honeypiAP": "HoneyPi Maintenance Mode",
      "honeypiAPtext": "Change the SSID and password of the AccessPoint.",
      "honeypiModem": "Internet Modem",
      "infoConnection": "During the maintenance mode the Raspi can <strong>not simultaneously </strong> be connected to a WiFi network, since the WiFi chip already provides the access point.\nTherefore, only the Internet connection of a connected surf stick or the LAN connection can be tested.",
      "isMobileConnected": "Internet connection available?",
      "isSurfstickConnected": "Networks connected?",
      "password": "WiFi network password",
      "ssid": "WiFi wireless network (SSID)",
      "testConnection": "Test your internet connectivity",
      "testDiag": "Show diagnosis data",
      "testError": "<strong>Error!</strong> Connection to the internet failed.",
      "testSuccess": "<strong>HoneyPi is connected!</strong> The internet test was successful.",
      "title": "Internet connection",
      "ttyUSB": "ttyUSB input",
      "wifi": "WiFi Internet access",
      "wpa_type": "WiFi-Encyrption"
    },
    "log": {
      "copy": "Copy to Clipboard",
      "delete": "Clear log",
      "empty": "The log on this device is empty.",
      "export": "Export settings",
      "get": "Refresh log",
      "import": "Import",
      "importSettings": "Import settings file:",
      "nofile": "There is no log on this device.",
      "title": "Log"
    },
    "measurement": {
      "construction": "This view is only provisional so far and will be extended in the next firmware version.",
      "get": "Recall new measurement",
      "info": "The sensors configured and stored in the \"<strong>{{tab}}</strong>\" tab are displayed here. There is no upload of measurement data to ThingSpeak. Measurement takes up to 1 minute.",
      "noData": "No measurement data measured. Were the sensors configured in the \"<strong>{{tab}}</strong>\" tab?",
      "title": "Measurement data"
    },
    "miscellaneous": {
      "display_enabled": "Enable OLED (Model: OLED 128x64px with SSD1306 Chip)",
      "enable_reset": "Enable the option that when the button is pressed for 10 seconds, all HoneyPi settings are reset",
      "show_nondefault_password": "Show non-default \"HoneyPi\"-AccessPoint password",
      "timeToStopMaintenance": "The maintenance mode of the HoneyPi Access-Point automatically turns off to correct accidental activations or forgotton switch offs and continue normal measurement operations.",
      "title": "Miscellaneous"
    },
    "offline": {
      "delete": "Delete",
      "export": "Maintain offline measurement data",
      "exportButton": "Download",
      "infoExport": "The measurement data is stored in a CSV file. This file can then be imported into the ThingSpeak Channel. Otherwise, the measurement data can also be visualized with the iOS/Web app.",
      "noData": "Specify at least one channel in the tab \"<strong>{{tab}}</strong>\".",
      "offline": "Offline Measurement without ThingSpeak",
      "radio0": "Online: Transfer exclusively online to ThingSpeak",
      "radio1": "Both: Transfer to ThingSpeak and save to CSV file",
      "radio2": "Errors: Write to CSV file only for Internet connection errors",
      "radio3": "Offline: Write only offline to CSV file",
      "title": "Offline Measurement data",
      "upload": "Upload to ThingSpeak"
    },
    "sensors": {
      "addSensor": "Add Sensor",
      "advancedSettings": "Advanced Settings Â»",
      "buttonPin": "Maintenance Mode Pushbutton GPIO",
      "calibration": {
        "btnBack": "Back",
        "btnFinish": "Accept calibration values",
        "btnNext": "Next",
        "guidedTour": "Guided calibration of the scale",
        "step0": "<p>Start the automatic calibration of the scale.</p>",
        "step1": "<p>\n            Remove all weights from the scale and ensure that the measurement is not disturbed by touching the scale.\n            <br>Then press Next.\n</p>",
        "step2": "<p>\n            Only place your calibration weight on the scale.\n            The weight should be at least 3000g (3kg).\n            <br>Enter the weight of the calibration weight used [in grams]. Then press Next.\n</p>",
        "step3": "<p>\nCalibration is completed. Do not forget to save the new settings.\n</p>",
        "title": "Calibration of the scale",
        "weightPlaceholder": "Weight [in grams]"
      },
      "checkWires": "Please check the wires of the connected sensors and",
      "checkWiresSuffix": "the list.",
      "co2": "CO2",
      "compensationSelectTemp": "Selection of the temperature sensor",
      "compensationTemp": "Temperature during calibration",
      "compensationTempPlaceholder": "Temperature value (e.g. 22Â°C)",
      "compensationValue": "Correction value [grams per Â°C]",
      "compensationValuePlaceholder": "Compensation value",
      "customValue": "Edit custom value...",
      "debug": "Enable debug mode <small>(no restarts, HDMI output on, successful transfers in the protocol)</small>",
      "debugSelect": "Select Debug-Level",
      "debugSelectLogfile": "Select the type and amount of output to the log file.",
      "debuglevel": "Debuglevel",
      "default_state": "WittyPi default State",
      "dummyload": "Activate dummyload (only use together with a Powerbank)",
      "dummyloadTimespan": "Time duration of the dummy load",
      "enableCompensation": "Temperature compensation for temperature-induced measurement drifts",
      "filter_negative": "Filter negative values to reduce measurement errors",
      "humidity": "Humidity",
      "i2c_addr": "I2C-Address <br><small>only required if more than one sensor is connected.</small>",
      "interval": "Interval",
      "invert": "Invert weight result",
      "ledPin": "External LED GPIO",
      "light": "Light sensor (Lux)",
      "measurementInterval": "Measuring interval",
      "measurementNone": "No measurement data transfer",
      "measurementOnce": "One-time transfer after power-on (suggested for WittyPi module)",
      "offset": "Offset",
      "offset2": "Sum of weight changes",
      "power_cut_delay": "Power cut delay [Seconds]",
      "pressure": "Air pressure",
      "pulsing_interval": "Interval for LED pulsing [Seconds]",
      "quality": "Indoor air quality",
      "scale": "Scale unit",
      "selectI2CVoltage": "Select max voltage [V]",
      "selectI2CVoltage_c": "Max measureable voltage [V] (e.g. 16.5V)",
      "selectPin": "Select PIN of the PCF8591",
      "selectType": "Select type of sensor",
      "sensor": "Sensor",
      "sensor_0": "Temperature sensor (DS18b20)",
      "sensor_1": "Temperature+humidity+pressure+quality (BME680)",
      "sensor_10": "Humidity and temperature (AHT10/AHT15/AHT20/AHT21)",
      "sensor_11": "Light Sensor (BH1750)",
      "sensor_12": "Humidity and temperature (SHT25)",
      "sensor_2": "Weight sensor (HX711)",
      "sensor_3": "Humidity and temperature (DHT11/DHT22/AM2302)",
      "sensor_4": "Temperature sensor (MAX6675/MAX31855)",
      "sensor_5": "Temperature+humidity+pressure (BME280)",
      "sensor_6": "Voltmeter for Battery (PCF8591)",
      "sensor_7": "CO2 + temperature + air pressure (EE895)",
      "sensor_8": "Humidity and temperature (HDC1080/HDC2080)",
      "sensor_9": "Humidity and temperature (SHT30/SHT31/SHT35/SHT85)",
      "sensor_99": "GPS (PA1010D)",
      "sensors": "Sensors",
      "shutdownAfterTransfer": "Shut down Raspberry after single transfer",
      "temperature": "Temperature",
      "timeout": "Timeout [Seconds]",
      "title": "Attached sensors",
      "ts_field_absolutehumidity": "Absolute humidity",
      "ts_field_offset2": "for Sum of weight changes",
      "ts_field_uncompensated": "Non compensated weight",
      "use3V": "Using a GPIO as 3.3V power supply source",
      "version": "Version",
      "weightcell": "Weight cell",
      "white_led_duration": "LED duration [ms]"
    },
    "thingspeak": {
      "addChannel": "Add more",
      "checkConnection": "Check connection to ThingSpeak",
      "confirmCheck": "You are about to test if the ThingSpeak connection information you entered is correct.\nNote: This function only works if the Raspberry Pi is connected to the Internet. To check the Internet connection, click on the tab and the button \"Check Internet Connection\".",
      "field": "Field",
      "removeChannel": "Remove Channel from list",
      "title": "ThingSpeak Settings"
    },
    "update": {
      "availableVersion": "Versions available:",
      "currentVersion": "Currently installed version:",
      "export": "Settings",
      "install": "Reinstall system",
      "internet_connection": "No internet connection. Try again with internet connection.",
      "need_refresh": "Successfully updated. The page needs to be refreshed.  \nReload now?",
      "newVersionAvailable": "A more recent system update is available. You can update this in the \"System update\" tab. Keep your HoneyPi software up to date to benefit from bug fixes and new features.",
      "preupdate": "Check for new version",
      "title": "System update",
      "update": "Update now",
      "usePreVersion": "Also install pre-release versions (beta test)",
      "want_import": "Should the file be imported now?"
    },
    "wittypi": {
      "empty": "Empty field",
      "enableLowMode": "Activate an energy-saving schedule",
      "enableNormalMode": "Activate a schedule",
      "enableVoltageCheck": "Switching between different schedules with connected voltmeter (PCF8591)",
      "enableWitty": "Enable Witty Pi module",
      "install2": "Install WittyPi 2",
      "install3": "Install WittyPi 3",
      "install4": "Install WittyPi 4",
      "loadexample": "Load an example schedule...",
      "need_restart": "Successful. The Raspberry must now be rebooted by you.",
      "script": "Schedule code",
      "title": "Time and energy management",
      "version": "Select WittyPi version",
      "voltage": "Voltage",
      "voltageLow": "Limit value for activation of the energy-saving schedule",
      "voltageLowInterval": "Measuring interval during the energy-saving mode",
      "voltageNormal": "Limit for returning to the normal schedule"
    }
  },
  "title": "Maintenance Mode"
}
